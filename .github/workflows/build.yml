name: storage-builder
on:
  # push:
  #   branches:
  #     - master
  workflow_dispatch:

jobs:
  release:
    runs-on: ubuntu-18.04
    outputs:
      version: ${{ steps.semantic.outputs.new_release_version }}
    steps:
      - uses: actions/checkout@v2
      - name: Semantic Release
        id: semantic
        uses: cycjimmy/semantic-release-action@v2
        with:
          semantic_version: 16
          extra_plugins: |
            @semantic-release/commit-analyzer
            @semantic-release/release-notes-generator
            @semantic-release/github
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-x86:
    name: Build x64 binary
    needs:
      - release
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - name: Set up Node
        uses: actions/setup-node@v2
        with:
          node-version: '12.18.1'
      - uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Build artifacts
        id: build-x64-macos
        run: |
          npm ci
          npm run build
          npm run pkg -- --targets node12-linux-x64,node12-macos-x64 --out-path bin
          mv bin/server-macos storage-api-macos-x86_64
          mv bin/server-linux storage-api-x86_64
          tar -czvf storage-api-linux-x64.tar.gz storage-api-x86_64 migrations/
          tar -czvf storage-api-macos-x64.tar.gz storage-api-macos-x86_64 migrations/
      - name: Upload x64 binary to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: storage-api-linux-x64.tar.gz
          tag: v${{ needs.release.outputs.version }}
          asset_name: storage-api-linux-x86_64.tar.gz
          overwrite: true
      - name: Upload macos binary to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: storage-api-macos-x64.tar.gz
          tag: v${{ needs.release.outputs.version }}
          asset_name: storage-api-macos-x86_64.tar.gz
          overwrite: true
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: gh-Dockerfile
          push: true
          tags: supabase/storage-api:latest,supabase/storage-api:v${{ needs.release.outputs.version }}

  build-arm:
    name: Build ARM64 artifact
    needs:
      - release
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      # - name: Setup cache
      #   uses: actions/cache@v2
      #   with:
      #     path: |
      #       ~/.ccache
      #     key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}-aarch64
      - uses: uraimo/run-on-arch-action@v2.0.5
        id: build-arm64
        with:
          arch: aarch64
          distro: ubuntu18.04
          githubToken: ${{ github.token }}
          setup: |
            mkdir -p "${PWD}/artifacts"
            mkdir -p "${PWD}/ccache"
          dockerRunArgs: |
            --volume "${PWD}/artifacts:/artifacts"
          # --volume "${PWD}/.ccache:/root/.npm"
          install: |
            apt-get update -y
            apt-get -y install --no-install-recommends curl wget ca-certificates
            curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.37.2/install.sh | bash
            . ~/.nvm/nvm.sh
            nvm install 12.18.1
            mkdir -p ~/.pkg-cache/v2.6
            wget https://github.com/robertsLando/pkg-binaries/releases/download/v1.0.0/fetched-v12.18.1-linux-arm64 -O fetched-v12.18.1-linux-arm64
            mv fetched-v12.18.1-linux-arm64 ~/.pkg-cache/v2.6
          run: |
            . ~/.nvm/nvm.sh
            npm ci
            npm run build
            npm run pkg -- --targets node12-linux-arm64 --output storage-api-aarch64
            tar -czvf storage-api-aarch64.tar.gz storage-api-aarch64 migrations/
            cp storage-api-aarch64.tar.gz /artifacts/storage-api-aarch64.tar.gz
      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: artifacts/storage-api-aarch64.tar.gz
          asset_name: storage-api-linux-aarch64.tar.gz
          tag: v${{ needs.release.outputs.version }}
          overwrite: true
